---
title: "Draft"
author:
  name: Christian Hicks
  url: https://github.com/hicks017
bibliography: resources/references.bib
csl: resources/reference_style_vancouver.csl
format:
  html:
    embed-resources: true
    df-print: kable
    toc: true
    toc-depth: 3
    code-fold: true
    date: 2025-04-13
    date-modified: last-modified
description: An analysis of rule changes recent to 2025 Major League Baseball.
editor: visual
---

[Source code](https://github.com/hicks017/MLB-rule-changes "GitHu: Hicks017 MLB-rule-changes") \| PDF version (WIP)

## Background

The year 2020 brought big changes to the world, such as how Major League Baseball (MLB) is played. In fact, the five-year span of 2019-2023 had the largest number of rule changes in any other five-year span of MLB history [@inc_mlb_nodate]. These efforts aimed to reduce the length of games, increase scoring, preserve player safety, and increase viewership. The introduction of the three‑batter minimum for relief pitchers in 2020 sought to remove one‑ and two‑batter “specialist” relievers and thereby reduce the number of pitching changes that prolong games [@noauthor_these_nodate; @noauthor_three-batter_nodate; @noauthor_three-batter_nodate-1]. In the same year the league introduced the infamous "Manfred Man", an extra‑innings runner on second base to promote earlier scoring and shorten games stuck in a stalemate [@noauthor_designated_nodate; @noauthor_designated_nodate-3; @noauthor_ghost_2023]. The universal designated hitter eliminated the pitcher’s plate appearance and intended to boost offensive production [@noauthor_designated_nodate-1; @noauthor_designated_nodate-2; @noauthor_new_nodate].

In 2023, MLB continued the offensive and safety initiatives. Bases were increased in size from 15″ to 18″ to shorten the distance between bags, with the dual-purpose of encouraging more stolen‑base attempts and reducing dangerous collisions [@noauthor_base_nodate; @noauthor_base_nodate-1]. The pitch clock and disengagement policy were also deployed to accelerate the game tempo [@noauthor_pitch_nodate; @noauthor_pitch_nodate-1; @noauthor_pitch_nodate-2; @noauthor_balk_nodate; @schofield_pitch_2023]. Finally, restrictions on defensive positioning prevented "the shift", an extreme alignment that countered pull-hitters and reduced their batting‑average‐on‐balls‐in‐play (BABIP) [@noauthor_defensive_nodate; @noauthor_defensive_nodate-1].

While each of these rule changes intends to improve the MLB viewing experiences, their real-world effects require systematic and independent quantification. This analysis leverages publicly available pitch-by-pitch, play-by-play, and other game day datasets to measure key metrics before and after each rule's implementation. Comparing metrics with pre- and post-rule windows aims to provide empirical evidence on the efficacy of MLB's recent innovations and inform future decision-making in professional baseball.

## Methods

### Study Period

This was a retrospective, observational study of MLB rule changes that were implemented during the 2020-2023 seasons. Only MLB regular-season games were included. Postseason matchups and Minor league games were excluded.

For each studied rule, the year of implementation defined the boundary between pre-rule and post-rule windows. All seasons prior to implementation, through the start of the 2014 regular season, comprised of the pre-rule window. All seasons from implementation and onward, through the end of the 2024 regular season, comprised of the post-rule period.

The 2020 season was a short season due to the COVID-19 pandemic. Therefore this season was included when analyzing within-game metrics and excluded from season-aggregated metrics.

### Outcomes

Various metrics tailored to each rule change were investigated to perform a robust analysis. These metrics are described alongside the respective rule changes below.

+-------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| Rule change                                                                   | Outcomes to compare pre/post                                                            |
+===============================================================================+=========================================================================================+
| Base stealing encouragements (larger base size, pitcher disengagement policy) | -   Number of attempted steals by teams per season                                      |
|                                                                               |                                                                                         |
|                                                                               | -   Success rate of steals by teams per season                                          |
+-------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| Extra-innings baserunner                                                      | -   Number of extra innings required to determine a winner after the 9th inning         |
|                                                                               |                                                                                         |
|                                                                               | -   Number of runs scored during extra innings                                          |
|                                                                               |                                                                                         |
|                                                                               | -   Number of batters needed before first run in extra innings                          |
|                                                                               |                                                                                         |
|                                                                               | -   Final inning in marathon games                                                      |
|                                                                               |                                                                                         |
|                                                                               | -   Total runs in marathon games                                                        |
|                                                                               |                                                                                         |
|                                                                               | -   Batters until first score in marathon games                                         |
+-------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| Pitch clock                                                                   | -   Length of individual plays                                                          |
|                                                                               |                                                                                         |
|                                                                               | -   Combined game duration (excluding commercial breaks and other miscellaneous pauses) |
+-------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| Universal designated hitter                                                   | -   Number of at-bats by pitcher position versus DH position                            |
|                                                                               |                                                                                         |
|                                                                               | -   On base percentage of pitcher position versus DH position                           |
|                                                                               |                                                                                         |
|                                                                               | -   On-base-plus-slugging of pitcher position versus DH position                        |
+-------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| Defensive shift ban                                                           | -   Team BABIP stat across seasons                                                      |
|                                                                               |                                                                                         |
|                                                                               | -   Outcome of plays (hit, out, etc) when batter makes pull-side contact                |
+-------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+
| 3-batter minimum                                                              | -   Number of pitchers used per game                                                    |
|                                                                               |                                                                                         |
|                                                                               | -   Number of pitching changes in the middle of an inning per game                      |
|                                                                               |                                                                                         |
|                                                                               | -   Proportion of games with at least one, two, and three mid-inning pitching changes   |
+-------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------+

### WIP Statistical analysis

-   Summarize each metric with mean (SD), median (IQR), and range.

-   Pre/post comparisons with two-sample t-tests (not paired because too many variables change such as players, coaches, schedules, weather). 95% confidence intervals for differences in means or proportions.

-   Exclusion of 2020 year when shortened season would affect team statistics.

### WIP Software, reproducibility, and data licensing

All data-retrieval and preprocessing was executed using [Python 3.11.6](https://www.python.org/downloads/release/python-3116/ "Python Release 3.11.6"). The exploration and final analysis were written with [R 4.4.3](https://cran.r-project.org/bin/windows/base/old/4.4.3/ "CRAN - R 4.4.3") within a lightweight Docker container. Versioned scripts and written reports were saved on a public [GitHub repository](https://github.com/hicks017/MLB-rule-changes "MLB Rule Changes - Christian Hicks") to ensure transparency.

Raw data originated from the free, official [MLB Stats API.](https://statsapi.mlb.com/api/ "MLB Stats API") No personal player data or personally identifiable information were used.

```{r}
#| code-summary: Packages
#| message: false

# Common packages
library(readr)
library(dplyr)
library(tidyr)
library(tibble)
library(ggplot2)
library(broom)
library(lubridate)

# Uncommon packages
library(gtsummary)
library(ggsignif)

# Use a flexible route to the data file path
if (basename(getwd()) == "explore data") {
  path <- "../resources/data"
} else if (basename(getwd()) == "MLB-rule-changes") {
  path <- "resources/data"
} else {print("Failed to set path")}

# Define colors for plots
dodger_red <- "#EF3E42"
dodger_blue <- "#005A9C"
```

## Results

### Base stealing encouragements

```{r}
#| code-summary: Data
#| message: false

# Get steal attempts and results
df_steals <- read_csv(file.path(path, "team_steals.csv"))

# Modify columns and create new variables
df_steals <- mutate(
  df_steals,
  
  # Change name for Cleveland to the Guardians
  team_name = ifelse(
    endsWith(team_name, "Indians"),
    "Cleveland Guardians",
    team_name
  ),
  
  # Count total attempts
  attempts = stolen_bases + caught_stealing,
  
  # Indicate rule change
  rule_change = ifelse(season < 2023, FALSE, TRUE),
  
  # Factor the season variable
  season = factor(season)
)
```

Larger bases marginally reduced the steal distance, but the major change was the pitcher disengagement policy. Now pitchers only have three pickoff attempts. If they miss the third attempt then baserunners advance a base. This rule lets runners draw two pickoff attempts before pitchers become hesitant to risk a third try, enabling them to take a bigger lead than before.

```{r}
#| code-summary: Test

# Remove 2020 from test
df_steals_exclude_2020 <- filter(df_steals, season != "2020")

# Define factor order to control negative/positive sign of estimate
df_steals_exclude_2020 <- mutate(df_steals_exclude_2020, rule_change = factor(
  rule_change,
  levels = c("TRUE", "FALSE")
))

# Test
ttest_steal_attempts <- t.test(attempts ~ rule_change, data = df_steals_exclude_2020)
```

```{r}
#| include: false

# Environemnt variables for stealing change t tests
ttest_steal_attempts_estimate <- unname(round(
  ttest_steal_attempts[["estimate"]][1] - ttest_steal_attempts[["estimate"]][2],
  1
))

ttest_steal_attempts_ci <- sprintf(
  '%.2f to %.2f',
  ttest_steal_attempts[['conf.int']][1],
  ttest_steal_attempts[['conf.int']][2]
)

steal_attempt_increase_pct <- paste0(
  round(
    ttest_steal_attempts_estimate
    / ttest_steal_attempts[["estimate"]][["mean in group FALSE"]]
    * 100
  ),
  "%"
)
```

Teams began attempting more steals after the implementation of rules that encourage base stealing (@fig-steal-count). Mean number of steal attempts by teams in a single season, excluding 2020, increased by `r ttest_steal_attempts_estimate` after the rule changes (95% CI: `r ttest_steal_attempts_ci`. @tbl-steal-count). This is equivalent to a `r steal_attempt_increase_pct` increase.

```{r}
#| code-summary: Plot
#| fig-cap: Bar charts of team steal attempts from years 2014-2024.
#| label: fig-steal-count

df_steals |>
  
  # Aggregate means and SDs
  group_by(season, rule_change) |>
  summarise(
    attempts_mean = mean(attempts),
    attempts_sd = sd(attempts),
    .groups = "drop"
  ) |>
  
  # Plot
  ggplot(aes(x = season, y = attempts_mean, fill = rule_change)) +
  geom_bar(
    stat = "identity",
    color = "gray10",
    width = 0.7,
    alpha = 0.75
  ) +
  geom_errorbar(
    aes(ymin = attempts_mean - attempts_sd, ymax = attempts_mean + attempts_sd),
    width = 0.2,
    color = "gray10",
    alpha = 0.75
  ) +
  
  # Format
  scale_fill_manual(
    values = c(`TRUE` = dodger_red, `FALSE` = dodger_blue)
  ) +
  theme(
    axis.title.y = element_text(angle = 0, vjust = 0.6),
    panel.grid.minor = element_blank()
  ) +
  labs(
    title = "Mean stolen base attempts by year and rule presence",
    x = "Season",
    y = "Attempts",
    fill = "Rule change"
  )
```

```{r}
#| code-summary: Table
#| tbl-cap: Mean steal attempts by year across 30 teams.
#| label: tbl-steal-count

df_steals |>
  arrange(season) |>
  select(team_id, season, attempts) |>
  pivot_wider(id_cols = team_id, names_from = season, values_from = attempts) |>
  gtsummary::tbl_summary(
    include = -team_id,
    missing = "no",
    statistic = everything() ~ "{mean} ± {sd}"
  ) |>
  gtsummary::modify_header(label = "**Year**")
```

```{r}
#| code-summary: Test

# Factor order
df_steals_success <- mutate(df_steals, rule_change = factor(
  rule_change,
  levels = c("TRUE", "FALSE")
))

# Test
ttest_steal_success <- t.test(sb_success_rate ~ rule_change, data = df_steals_success)
```

```{r}
#| include: false

# Environemnt variables for stealing change t tests
ttest_steal_success_estimate <- 
  (round(
    ttest_steal_success[["estimate"]][1] - ttest_steal_success[["estimate"]][2],
    2
  ) * 100) |>
  unname() |>
  paste0("%")

ttest_steal_success_ci <- paste0(
  round(ttest_steal_success[['conf.int']][1] * 100),
  "% to ",
  round(ttest_steal_success[['conf.int']][2] * 100),
  "%"
)
```

In addition to more stolen base attempts, teams have become more successful at stealing bases (@fig-steal-success). Mean success rates increased by `r ttest_steal_success_estimate` after the rule changes (95% CI: `r ttest_steal_success_ci`. @tbl-steal-success).

```{r}
#| code-summary: Plot
#| fig-cap: Point range chart of team steal success rates from years 2014-2024.
#| label: fig-steal-success

df_steals |>
  
  # Aggregate means and SDs
  group_by(season, rule_change) |>
  summarise(
    mean = mean(sb_success_rate),
    lower = mean - sd(sb_success_rate),
    upper = mean + sd(sb_success_rate),
    .groups = "drop"
  ) |>
  
  # Plot
  ggplot(aes(season, mean, color = rule_change)) +
  geom_pointrange(aes(ymin = lower, ymax = upper), size = 1, linewidth = 1) +
  
  # Format
  scale_y_continuous(limits = c(0, 1), labels = scales::percent) +
  scale_color_manual(values = c(`TRUE` = dodger_red, `FALSE` = dodger_blue)) +
  theme(
    axis.title.y = element_blank(),
    panel.grid.minor = element_blank()
  ) +
  labs(
    title = "Stolen base success rates by year",
    x = "Season",
    color = "Rule change",
    caption = "Mean ± SD shown"
  )
```

```{r}
#| code-summary: Table
#| tbl-cap: Mean steal success rates by year across 30 teams.
#| label: tbl-steal-success

df_steals |>
  select(season, team_id, sb_success_rate) |>
  pivot_wider(id_cols = team_id, names_from = season, values_from = sb_success_rate) |>
  gtsummary::tbl_summary(
    include = -team_id,
    missing = "no",
    statistic = everything() ~ "{mean} ± {sd}"
  ) |>
  gtsummary::modify_header(label = "**Year**")
```

### Extra-innings baserunner

```{r}
#| code-summary: Data
#| message: false

# Get table of games with extra innings and remove duplicates
df_extras <- read_csv(file.path(path, "extra_innings_games.csv"))
df_extras <- distinct(df_extras)

# Change name for Cleveland to the Guardians
df_extras <- mutate(
  df_extras,
  team_winner = ifelse(
    endsWith(team_winner, "Indians"),
    "Cleveland Guardians",
    team_winner
  ),
  team_loser = ifelse(
    endsWith(team_loser, "Indians"),
    "Cleveland Guardians",
    team_loser
  )
)

# Count innings over 9 per game per year
df_extras <- 
  df_extras |>
  mutate(extras = final_inning - 9) |>
  
  # Add indication of rule change and change year to a factor
  mutate(rule_change = ifelse(year < 2020, FALSE, TRUE)) |>
  mutate(year = factor(year))

# Select the games at and above the 95th percentile for final inning, by season
tbl_marathons <- 
  df_extras |>
  group_by(year) |>
  filter(final_inning >= quantile(final_inning, probs = 0.95, na.rm = TRUE)) |>
  ungroup()
```

```{r}
#| code-summary: Test

# Factor order
df_extras_ordered <- mutate(df_extras, rule_change = factor(
  rule_change,
  levels = c("TRUE", "FALSE")
))
tbl_marathons <- mutate(tbl_marathons, rule_change = factor(
  rule_change,
  levels = c("TRUE", "FALSE")
))

# Test
ttest_extras <- t.test(extras ~ rule_change, data = df_extras_ordered)
ttest_marathons <- t.test(final_inning ~ rule_change, data = tbl_marathons)
```

```{r}
#| include: false

# Environemnt variables for extra innings t tests
ttest_extras_estimate <- unname(
  round(ttest_extras[["estimate"]][2] - ttest_extras[["estimate"]][1])
)

ttest_extras_ci <- sprintf(
  '%.1f to %.1f',
  ttest_extras[['conf.int']][1],
  ttest_extras[['conf.int']][2]
)

ttest_marathons_estimate <- unname(
  round(ttest_marathons[["estimate"]][2] - ttest_marathons[["estimate"]][1])
)

ttest_marathons_ci <- sprintf(
  '%.1f to %.1f',
  ttest_marathons[['conf.int']][1],
  ttest_marathons[['conf.int']][2]
)
```

The addition of an automatic baserunner on second base during extra innings was meant to increase scoring and prevent marathon stalemates. As a result, extra innings required to break ties was reduced (@fig-extras). Extra-inning games were shortened by `r ttest_extras_estimate` inning (95% CI: `r ttest_extras_ci`. @tbl-extras).

Marathon games have been defined for the purpose of this document as games in the 95th percentile of innings required to break the tie. The mean final inning of marathon games decreased by nearly `r ttest_marathons_estimate` (95% CI: `r ttest_marathons_ci`. @fig-marathons).

```{r}
#| code-summary: Plot
#| fig-cap: Boxplot summary of extra innings required to break a tie during games from years 2014-2024.
#| label: fig-extras

# Plot
ggplot(df_extras, aes(x = year, y = extras, fill = rule_change)) +
  geom_boxplot(alpha = 0.75, outlier.alpha = 0.2) +
  
  # Format
  scale_y_continuous(breaks = seq(0, 10, by = 1)) +
  scale_fill_manual(values = c(`TRUE` = dodger_red, `FALSE` = dodger_blue)) +
  theme(
    panel.grid.minor = element_blank(),
    axis.title.y = element_text(angle=0, vjust = 0.5),
    legend.position = "inside",
    legend.position.inside = c(0.85, 0.85)
  ) +
  labs(
    title = "Total extra innings per game by year",
    x = "Season",
    y = "Extra\ninnings",
    fill = "Rule change"
  )
```

```{r}
#| code-summary: Table
#| tbl-cap: Mean extra innings to decide a winnin team by year across 2,152 games.
#| label: tbl-extras

df_extras |>
  select(game_pk, year, extras) |>
  pivot_wider(id_cols = game_pk, names_from = year, values_from = extras) |>
  gtsummary::tbl_summary(
    include = -game_pk,
    missing = "no",
    type = everything() ~ "continuous",
    statistic = everything() ~ "{mean} ± {sd}"
  ) |>
  gtsummary::modify_header(label = "**Year**")
```

```{r}
#| code-summary: Test

# Test
ttest_extras_runs <- t.test(total_extra_runs ~ rule_change, data = df_extras_ordered)
ttest_marathons_runs <- t.test(total_extra_runs ~ rule_change, data = tbl_marathons)
```

```{r}
#| include: false

# Environemnt variables for extra innings t tests
ttest_extras_runs_estimate <- unname(
  round(ttest_extras_runs[["estimate"]][1] - ttest_extras_runs[["estimate"]][2])
)

ttest_extras_runs_ci <- sprintf(
  '%.1f to %.1f',
  ttest_extras_runs[['conf.int']][1],
  ttest_extras_runs[['conf.int']][2]
)

ttest_marathons_runs_estimate <- unname(
  round(ttest_marathons_runs[["estimate"]][1] - ttest_marathons_runs[["estimate"]][2])
)

ttest_marathons_runs_ci <- sprintf(
  '%.1f to %.1f',
  ttest_marathons_runs[['conf.int']][1],
  ttest_marathons_runs[['conf.int']][2]
)
```

The baserunner on second brought more action during extra innings in the form of scoring (@fig-extras-runs). Mean number of runs scored during extra innings per game game increased by `r ttest_extras_runs_estimate` after the rule change (95% CI: `r ttest_extras_runs_ci`. @tbl-extras-runs). In marathon games these runs were increased by slightly more than `r ttest_marathons_runs_estimate` (95% CI: `r ttest_marathons_runs_ci`. @fig-marathons-runs).

```{r}
#| code-summary: Plot
#| fig-cap: Boxplot summary of extra innings runs during games from years 2014-2024.
#| label: fig-extras-runs

# Plot
ggplot(df_extras, aes(x = year, y = total_extra_runs, fill = rule_change)) +
  geom_boxplot(alpha = 0.75, outlier.alpha = 0.2) +
  
  # Format
  scale_y_continuous(breaks = seq(0, 12, by = 1)) +
  scale_fill_manual(values = c(`TRUE` = dodger_red, `FALSE` = dodger_blue)) +
  theme(
    axis.title.y = element_text(angle=0, vjust = 0.5),
    panel.grid.minor.y = element_blank()
  ) +
  labs(
    title = "Total runs scored during extra innings per game by year",
    x = "Season",
    y = "Runs",
    fill = "Rule change"
  )
```

```{r}
#| code-summary: Table
#| tbl-cap: Mean extra innings runs scored by year across 2,152 games.
#| label: tbl-extras-runs

df_extras |>
  select(game_pk, year, total_extra_runs) |>
  pivot_wider(id_cols = game_pk, names_from = year, values_from = total_extra_runs) |>
  gtsummary::tbl_summary(
    include = -game_pk,
    missing = "no",
    type = everything() ~ "continuous",
    statistic = everything() ~ "{mean} ± {sd}"
  ) |>
  gtsummary::modify_header(label = "**Year**")
```

```{r}
#| code-summary: Test

# Test
ttest_extras_batters <- t.test(
  batters_until_first_run ~ rule_change,
  data = df_extras_ordered
)
ttest_marathons_batters <- t.test(
  batters_until_first_run ~ rule_change,
  data = tbl_marathons
)
```

```{r}
#| include: false

# Environemnt variables for extra innings t tests
ttest_extras_batters_estimate <- unname(
  round(ttest_extras_batters[["estimate"]][2] - ttest_extras_batters[["estimate"]][1])
)

ttest_extras_runs_ci <- sprintf(
  '%.1f to %.1f',
  ttest_extras_batters[['conf.int']][1],
  ttest_extras_batters[['conf.int']][2]
)

ttest_marathons_batters_estimate <- unname(
  round(
    ttest_marathons_batters[["estimate"]][2] - ttest_marathons_batters[["estimate"]][1]
  )
)

ttest_marathons_runs_ci <- sprintf(
  '%.1f to %.1f',
  ttest_marathons_batters[['conf.int']][1],
  ttest_marathons_batters[['conf.int']][2]
)
```

Since it became easier to score runs, the fewer batters were needed to initially break the tie (@fig-extras-batters). The mean number of batter appearances before scoring the first run in extra innings decreased by `r ttest_extras_batters_estimate` (95% CI: `r ttest_extras_runs_ci`. @tbl-extra-batters). Marathon games saw the greatest reduction, with a staggering `r ttest_marathons_batters_estimate` fewer batters required to earn the first run during extra innings (95% CI: `r ttest_marathons_runs_ci`. @fig-marathons-batters).

```{r}
#| code-summary: Plot
#| fig-cap: Bar chart of batters needed to score the first run during extra innings from years 2014-2024.
#| label: fig-extras-batters

# Plot
ggplot(df_extras, aes(x = year, y = batters_until_first_run, fill = rule_change)) +
  geom_boxplot(alpha = 0.75, outlier.alpha = 0.2) +
  
  # Format
  scale_fill_manual(values = c(`TRUE` = dodger_red, `FALSE` = dodger_blue)) +
  theme(
    panel.grid.minor = element_blank(),
    axis.title.y = element_blank(),
    legend.position = "inside",
    legend.position.inside = c(0.85, 0.85)
  ) +
  labs(
    title = "Batters until first run scored in extra innings by year",
    x = "Season",
    fill = "Rule change"
  )
```

```{r}
#| code-summary: Table
#| tbl-cap: Mean number of batters until first run scored in extra innings by year.
#| label: tbl-extra-batters

df_extras |>
    select(game_pk, year, batters_until_first_run) |>
    pivot_wider(id_cols = game_pk, names_from = year, values_from = batters_until_first_run) |>
    gtsummary::tbl_summary(
        include = -game_pk,
        missing = "no",
        type = everything() ~ "continuous",
        statistic = everything() ~ "{mean} ± {sd}"
    ) |>
    gtsummary::modify_header(label = "**Year**")
```

### Pitch clock

```{r}
#| code-summary: Data
#| message: false

# Get distinct play durations
df_duration <- read_csv(file.path(path, "play_duration.csv"))
df_duration <- distinct(df_duration)

# Factorize season, split data, and filter out outliers
df_duration <- mutate(df_duration, season = factor(season))

tbl_duration_filtered_pre <- filter(
  df_duration,
  duration_sec > 0
  & duration_sec < 271 # 95th percentile
  & year(startTime) < 2023
)
tbl_duration_filtered_post <- filter(
  df_duration,
  duration_sec > 0
  & duration_sec < 271 # 95th percentile
  & year(startTime) >= 2023
)

tbl_duration_filtered_pre[["rule_change"]] <- FALSE
tbl_duration_filtered_post[["rule_change"]] <- TRUE

# Combine tables
tbl_duration_both <- rbind(tbl_duration_filtered_post, tbl_duration_filtered_pre)

# Remove two observations with multiple records
tbl_duration_both <- 
  tbl_duration_both |>
  group_by(game_pk, startTime) |>
  mutate(n = row_number()) |>
  ungroup() |>
  filter(n == 1)

# Create table with combined play duration
tbl_game_duration <- 
  tbl_duration_both |>
  filter(duration_sec < 271) |>
  group_by(game_pk, season, rule_change) |>
  summarise(
    duration_all_plays = sum(duration_sec) / (60 * 60), .groups = "drop" # Output in hours
  )
```

```{r}
#| code-summary: Test

# t test
ttest_duration <- t.test(duration_sec ~ rule_change, data = tbl_duration_both)
```

```{r}
#| include: false

# Environemnt variables for pitch clock t tests
ttest_duration_estimate <- unname(round(
  ttest_duration[["estimate"]][1] - ttest_duration[["estimate"]][2],
  1
))

ttest_duration_ci <- sprintf(
  '%.1f to %.1f',
  ttest_duration[['conf.int']][1],
  ttest_duration[['conf.int']][2]
)
```

The pitch clock was introduced to increase pace of the game and reduce downtime between plays. When analyzing play duration, major outliers were identified that potentially relate to weather delays, plays under review, or other miscellaneous events that pause the game. The 95th percentile of play duration was used as the threshold for removing outliers in this analysis.

As a result of the new pitch clock rules, the length of individual plays was reduced (@fig-duration). The mean play duration decreased by `r ttest_duration_estimate` seconds after the introduction of the pitch clock (95% CI: `r ttest_duration_ci`. @tbl-duration).

```{r}
#| code-summary: Plot
#| fig-cap: Density plots of play duration from years 2014-2024.
#| label: fig-duration

# Plot play duration by rule change status
ggplot() +
  
  # Post rule change
  geom_density(
    data = tbl_duration_filtered_post,
    aes(x = duration_sec, fill = rule_change),
    color = NA, alpha = 0.75,
  ) +
  
  # Pre rule change
  geom_density(
    data = tbl_duration_filtered_pre,
    aes(x = duration_sec, fill = rule_change),
    color = NA, alpha = 0.75,
  ) +
  
  # Post rule change (line)
  geom_density(
    data = tbl_duration_filtered_post,
    aes(x = duration_sec),
    color = dodger_red,
    linewidth = 1
  ) +
  
  # Pre rule change (line)
  geom_density(
    data = tbl_duration_filtered_pre,
    aes(x = duration_sec),
    color = "black"
  ) +
  
  # Formatting
  scale_fill_manual(
    name = "Rule Change",
    values = c(`FALSE` = dodger_blue, `TRUE` = dodger_red)
  ) +
  
  # Format
  scale_x_continuous(breaks = seq(0, 250, by = 50), expand = c(0,0)) +
  
  theme(
    panel.grid.minor = element_blank(),
    axis.title.y = element_text(angle = 0, vjust = 0.67),
    legend.position = "inside",
    legend.position.inside = c(0.85, 0.9)
  ) +
  
  labs(
    title = "Distributions of play duration before and after pitch clock implementation",
    subtitle = paste0(
      "Total plays = ", formatC(nrow(tbl_duration_both), format = "d", big.mark = ",")
    ),
    x = "Duration (seconds)",
    y = "Density\nof plays",
    caption = "Filtered for 0 < duration < 271 (95th percentile)"
  )
```

```{r}
#| code-summary: Table
#| tbl-cap: Mean play duration by year.
#| label: tbl-duration

tbl_duration_both |>
  select(game_pk, startTime, season, duration_sec) |>
  arrange(season) |>
  pivot_wider(
    id_cols = c(game_pk, startTime),
    names_from = season,
    values_from = duration_sec
  ) |>
  gtsummary::tbl_summary(
    include = -c(game_pk, startTime),
    type = everything() ~ "continuous",
    statistic = everything() ~ "{mean} ± {sd}",
    missing = "no"
  )
```

Text for combined play duration. Duration reduced by x%, equivalent to X minutes.

```{r}
#| code-summary: Plot
#| fig-cap: Bar chart of mean total play duration from years 2014-2024.
#| label: fig-total-duration

# Prepare data for bar charts
tbl_game_duration |>
  group_by(season, rule_change) |>
  summarise(
    duration_mean = mean(duration_all_plays),
    duration_sd = sd(duration_all_plays),
    .groups = "drop"
  ) |>
  
  # Plot
  ggplot(aes(x = season, y = duration_mean, fill = rule_change)) +
  geom_bar(
    stat = "identity",
    color = "gray10",
    width = 0.7,
    alpha = 0.75
  ) +
  geom_errorbar(
    aes(ymin = duration_mean - duration_sd, ymax = duration_mean + duration_sd),
    width = 0.2,
    color = "gray10",
    alpha = 0.75
  ) +
  
  # Format
  scale_fill_manual(
    values = c(`TRUE` = dodger_red, `FALSE` = dodger_blue)
  ) +
  theme(
    axis.title.y = element_text(angle = 0, vjust = 0.5),
    panel.grid.minor = element_blank()
  ) +
  labs(
    title = "Mean combined play duration by year and rule presence",
    x = "Season",
    y = "Hours",
    fill = "Rule change"
  )
```

### Universal designated hitter

### Defensive shift ban

### 3-batter minimum

```{r}
#| code-summary: Data
#| message: false

# Get pitcher appearances and changes
df_appearances <- read_csv(file.path(path, "pitcher_appearances.csv"))
df_changes <- read_csv(file.path(path, "pitcher_changes.csv"))

# Remove duplicates
df_appearances <- distinct(df_appearances)

# Change name for Cleveland to the Guardians
df_appearances <- mutate(df_appearances, team_name = ifelse(
  endsWith(team_name, "Indians"),
  "Cleveland Guardians",
  team_name
))

# Count pitching changes per game by year
tbl_n_per_game_yearly <- 
  df_appearances |>
  group_by(game_id, year) |>
  summarise(n = n(), .groups = "drop") |>
  
  # Add indication of rule change and change year to a factor
  mutate(
    rule_change = factor(ifelse(year < 2020, FALSE, TRUE), levels = c("TRUE", "FALSE")),
    year = factor(year)
  )
```

```{r}
#| code-summary: Test

# t test with factorization to define difference direction
ttest_pitching_changes <- t.test(n ~ rule_change, data = tbl_n_per_game_yearly)
```

```{r}
#| include: false

# Environemnt variables for pitching change t tests
ttest_pitching_change_estimate <- unname(round(
  ttest_pitching_changes[["estimate"]][1] - ttest_pitching_changes[["estimate"]][2],
  1
))

ttest_pitching_change_ci <- sprintf(
  '%.2f to %.2f',
  ttest_pitching_changes[['conf.int']][1],
  ttest_pitching_changes[['conf.int']][2]
)
```

With a three-batter minimum, the Left-handed One-Out Guy (LOOGY) and other specialty roles were mostly eliminated. Fewer short-term pitchers should have led to fewer pitchers used in a game, though the change was barely noticeable throughout each season (@fig-pitchers). In fact, there was a negligible increase. The mean number of pitchers used per game was `r ttest_pitching_change_estimate` higher after the 2020 rule change (95% CI: `r ttest_pitching_change_ci`. @tbl-pitchers).

```{r}
#| code-summary: Plot
#| fig-cap: Boxplot summary of pitcher appearances during games from years 2014-2024.
#| label: fig-pitchers

# Plot pitchers per game per year
ggplot(tbl_n_per_game_yearly, aes(x = year, y = n, fill = rule_change)) +
  geom_boxplot(outlier.alpha = 0.2, alpha = 0.75) +
  
  # Format
  scale_fill_manual(
    values = c("FALSE" = dodger_blue, "TRUE" = dodger_red),
    labels = c("FALSE" = "No minimum", "TRUE" = "3-batter minimum")
  ) +
  scale_y_continuous(limits = c(0, 40), breaks = seq(0, 40, by = 10)) +
  theme(
    axis.title.y = element_text(angle=0, vjust = 0.5),
    legend.title = element_blank(),
    legend.position = "inside",
    legend.position.inside = c(0.87, 0.91),
    panel.grid.minor = element_blank()
  ) +
  labs(
    title = "Total pitchers per game by year",
    x = "Season",
    y = "Count"
  )
```

```{r}
#| code-summary: Table
#| tbl-cap: Mean pitcher appearances by year.
#| label: tbl-pitchers

tbl_n_per_game_yearly |>
  select(-rule_change) |>
  pivot_wider(id_cols = game_id, names_from = year, values_from = n) |>
  gtsummary::tbl_summary(
    include = -game_id,
    missing = "no",
    statistic = everything() ~ "{mean} ± {sd}"
  ) |>
  gtsummary::modify_header(label = "**Year**")
```

```{r}
#| code-summary: Data

# Change name for Cleveland to the Guardians
df_changes <- mutate(df_changes, team_name = ifelse(
  endsWith(team_name, "Indians"),
  "Cleveland Guardians",
  team_name
))

# Count pitching changes per game by year
tbl_changes_per_game_yearly <- 
  df_changes |>
  group_by(game_id, year) |>
  summarise(n = n(), .groups = "drop") |>
  
  # Input games without a mid-inning pitching change
  mutate(event = TRUE) |>
  right_join(
    df_appearances |> select(game_id, year) |> distinct(),
    by = c("game_id", "year")
  ) |>
  mutate(n = ifelse(is.na(event), 0, n)) |>
  select(-event) |>
  
  # Add indication of rule change and change year to a factor
  mutate(
    rule_change = factor(ifelse(year < 2020, FALSE, TRUE), levels = c("TRUE", "FALSE")),
    year = factor(year)
  )
```

```{r}
#| code-summary: Test

# t test with factorization to define difference direction
ttest_mid_changes <- t.test(n ~ rule_change, data = tbl_changes_per_game_yearly)
```

```{r}
#| include: false

# Environemnt variables for pitching change t tests
ttest_mid_change_estimate <- unname(round(
  ttest_mid_changes[["estimate"]][1] - ttest_mid_changes[["estimate"]][2],
  1
))

ttest_mid_change_ci <- sprintf(
  '%.2f to %.2f',
  ttest_mid_changes[['conf.int']][1],
  ttest_mid_changes[['conf.int']][2]
)
```

A three-batter minimum should eliminate the opportunity to call in a pitcher for a single batter, which would decrease the number of pitching changes that occur in the middle of an inning. The number of mid-inning pitching changes decreased since 2020, but the magnitude was small (@fig-mid-inning). The mean number of mid-inning pitching changed by `r ttest_mid_change_estimate` after the 2020 rule change (95% CI: `r ttest_mid_change_ci`. @tbl-mid-inning).

```{r}
#| code-summary: Plot
#| fig-cap: Boxplot summary of mid-inning pitching changes during games from years 2014-2024.
#| label: fig-mid-inning

# Plot pitchers per game per year
ggplot(tbl_changes_per_game_yearly, aes(x = year, y = n, fill = rule_change)) +
  geom_boxplot(outlier.alpha = 0.2, alpha = 0.75) +
  
  # Format
  scale_fill_manual(
    values = c("FALSE" = dodger_blue, "TRUE" = dodger_red),
    labels = c("FALSE" = "No minimum", "TRUE" = "3-batter minimum")
  ) +
  theme(
    axis.title.y = element_text(angle=0, vjust = 0.6),
    legend.title = element_blank(),
    legend.position = "inside",
    legend.position.inside = c(0.8, 0.91),
    panel.grid.minor = element_blank()
  ) +
  labs(
    title = "Total mid-inning pitching changes per game by year",
    x = "Season",
    y = "Count"
  )
```

```{r}
#| code-summary: Table
#| tbl-cap: Mean mid-inning pitching changes by year.
#| label: tbl-mid-inning

tbl_changes_per_game_yearly |>
  select(-rule_change) |>
  pivot_wider(id_cols = game_id, names_from = year, values_from = n) |>
  gtsummary::tbl_summary(
    include = -game_id,
    missing = "no",
    statistic = everything() ~ "{mean} ± {sd}",
    digits = everything() ~ 1
  ) |>
  gtsummary::modify_header(label = "**Year**")
```

```{r}
#| code-summary: Data

tbl_changes_per_game_yearly <- 
  tbl_changes_per_game_yearly |>
  mutate(
  rule_change = factor(
    ifelse(rule_change == TRUE, "3-batter minimum", "No minimum"),
    levels = c("No minimum", "3-batter minimum")
  ),
  `1 pause` = ifelse(n > 0, TRUE, FALSE),
  `≥2 pauses` = ifelse(n > 1, TRUE, FALSE),
  `≥3 pauses` = ifelse(n > 2, TRUE, FALSE)
)
```

```{r}
#| include: false

pauses <- 
  
  # Summarize various counts of mid-inning pauses by rule in place
  tbl_changes_per_game_yearly |>
  group_by(rule_change) |>
  summarise(
    pause_01 = mean(`1 pause`),
    pause_02 = mean(`≥2 pauses`),
    pause_03 = mean(`≥3 pauses`)
  ) |>
  
  # Wrangle into a named list
  pivot_longer(cols = -rule_change) |>
  pivot_wider(names_from = rule_change, values_from = value) |>
  mutate(diff = paste0(round((`3-batter minimum` - `No minimum`) * 100, 1), "%")) |>
  select(name, diff) |>
  tibble::deframe()
```

A mid-inning pitching change would add a pause in play that was not already scheduled, such as pauses in between innings. Games with such pauses were slightly less frequent after the 3-batter minimum implementation (@fig-pauses). The differences in proportions of games with pauses in play due to mid-inning pitching changes were `r pauses[["pause_01"]]` for games with any added pauses, `r pauses[["pause_02"]]` for games with at least 2 pauses, and `r pauses[["pause_03"]]` for games with at least 3 pauses (@tbl-pauses).

```{r}
#| code-summary: Plot
#| fig-cap: Bar chart of pauses in play due to mid-inning pitching changes before and after rule change.
#| label: fig-pauses

# Wrangle data for plot
tbl_changes_per_game_yearly |>
  pivot_longer(
    cols = c(`1 pause`, `≥2 pauses`, `≥3 pauses`),
    names_to = "pause_type",
    values_to = "is_true"
  ) |>
  mutate(pause_type = factor(pause_type, levels = c(
    "1 pause", "≥2 pauses", "≥3 pauses"
  ))) |>
  group_by(rule_change, pause_type) |>
  summarise(proportion = mean(is_true), .groups = "drop") |>
  
  # Plot
  ggplot(aes(x = pause_type, y = proportion, fill = rule_change)) +
  geom_bar(stat = "identity", position = "dodge", alpha = 0.75, color = "gray10") +
  
  # Significance lines
  geom_signif(
    y_position = c(0.93, 0.68, 0.41),
    xmin = c(0.75, 1.75, 2.75), 
    xmax = c(1.25, 2.25, 3.25),
    annotation = c("*", "***", "***"),
    tip_length = 0
  ) +
  
  # Format
  scale_y_continuous(limits = c(0, 1), labels = scales::percent) +
  scale_fill_manual(values = c(
    "No minimum" = dodger_blue,
    "3-batter minimum" = dodger_red
  )) +
  theme(
    legend.title = element_blank(),
    legend.position = "inside",
    legend.position.inside = c(0.8, 0.91),
    axis.title = element_blank()
  ) +
  labs(
    title = "Percentage of games with pauses in play due to mid-inning pitching changes",
    caption = "*p<.05\n***p<.001"
  )
```

```{r}
#| code-summary: Table
#| tbl-cap: Count and proportions of games with various numbers of pauses in play due to mid-inning pitching changes.
#| label: tbl-pauses

# Test result by rule change
gtsummary::tbl_summary(
  data = tbl_changes_per_game_yearly,
  include = matches("pause(s)?$"),
  by = rule_change
) |>
  gtsummary::modify_header(label = "**Mid-inning pauses**") |>
  gtsummary::modify_spanning_header(all_stat_cols() ~ "**Rule in place**") |>
  gtsummary::add_p()
```

## Appendix

```{r}
#| code-summary: Plot
#| fig-cap: Boxplot summary of extra innings required to break a marathon tie during games from years 2014-2024.
#| label: fig-marathons

# Visualize 95th percentile of final inning
ggplot(tbl_marathons, aes(x = year, y = final_inning, fill = rule_change)) +
  geom_boxplot(alpha = 0.75) +
  scale_y_continuous(limits = c(10, 20), breaks = seq(10, 20, by = 2)) +
  scale_fill_manual(values = c(`TRUE` = dodger_red, `FALSE` = dodger_blue)) +
  theme(
    panel.grid.minor = element_blank(),
    axis.title.y = element_text(angle=0, vjust = 0.5),
    legend.position = "inside",
    legend.position.inside = c(0.85, 0.85)
  ) +
  labs(
    title = "Final inning for 95th percentile of game length by year",
    x = "Season",
    y = "Final\ninning",
    fill = "Rule change"
  )
```

```{r}
#| code-summary: Plot
#| fig-cap: Boxplot summary of extra innings runs during marathon games from years 2014-2024.
#| label: fig-marathons-runs

# Plot
ggplot(tbl_marathons, aes(x = year, y = total_extra_runs, fill = rule_change)) +
  geom_boxplot(alpha = 0.75, outlier.alpha = 0.2) +
  
  # Format
  scale_y_continuous(breaks = seq(0, 12, by = 1)) +
  scale_fill_manual(values = c(`TRUE` = dodger_red, `FALSE` = dodger_blue)) +
  theme(
    axis.title.y = element_text(angle=0, vjust = 0.5),
    panel.grid.minor.y = element_blank()
  ) +
  labs(
    title = "Total runs scored during extra innings in marathon games by year",
    x = "Season",
    y = "Runs",
    fill = "Rule change"
  )
```

```{r}
#| code-summary: Plot
#| fig-cap: Bar chart of batters needed to score the first run during marathon games from years 2014-2024.
#| label: fig-marathons-batters

# Plot
ggplot(tbl_marathons, aes(x = year, y = batters_until_first_run, fill = rule_change)) +
  geom_boxplot(alpha = 0.75, outlier.alpha = 0.2) +
  
  # Format
  scale_fill_manual(values = c(`TRUE` = dodger_red, `FALSE` = dodger_blue)) +
  theme(
    panel.grid.minor = element_blank(),
    axis.title.y = element_blank(),
    legend.position = "inside",
    legend.position.inside = c(0.85, 0.85)
  ) +
  labs(
    title = "Batters until first run scored in extra innings during marathon games by year",
    x = "Season",
    fill = "Rule change"
  )
```

## References
